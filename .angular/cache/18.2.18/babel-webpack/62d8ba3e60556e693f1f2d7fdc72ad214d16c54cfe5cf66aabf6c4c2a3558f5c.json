{"ast":null,"code":"import { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../banner/banner.component\";\nimport * as i3 from \"../images-area/images-area.component\";\nexport class DashboardComponent {\n  constructor(ht) {\n    this.ht = ht;\n    this.url = \"https://dummyjson.com/users\";\n    this.currentPage = 0;\n    this.totalPages = 0;\n    this.recordsPerPage = 10;\n    this.results = [];\n    this.isLoading = false;\n  }\n  ngOnInit() {\n    // this.fetchTableData(0)\n  }\n  fetchTableData(page) {\n    this.isLoading = true;\n    let skip = page ? page * this.recordsPerPage : page;\n    this.results$ = this.ht.get(`${this.url}?skip=${skip}&limit=${this.recordsPerPage}`).pipe(map(res => {\n      this.isLoading = false;\n      this.totalPages = Math.ceil(res.total / this.recordsPerPage);\n      return res.users;\n    }), catchError((error, caught) => caught));\n    this.results$.subscribe({\n      next: res => this.results = res,\n      error: err => console.log(err)\n    });\n  }\n  goToPage(page) {\n    switch (page) {\n      case 'previous':\n        this.currentPage = this.currentPage - 1;\n        break;\n      case 'next':\n        this.currentPage = this.currentPage + 1;\n        break;\n      case 'last':\n        this.currentPage = this.totalPages - 1;\n        break;\n      case 'first':\n      default:\n        this.currentPage = 0;\n        break;\n    }\n    this.fetchTableData(this.currentPage);\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 3,\n      vars: 0,\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-banner\")(1, \"br\")(2, \"app-images-area\");\n        }\n      },\n      dependencies: [i2.BannerComponent, i3.ImagesAreaComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["map","catchError","DashboardComponent","constructor","ht","url","currentPage","totalPages","recordsPerPage","results","isLoading","ngOnInit","fetchTableData","page","skip","results$","get","pipe","res","Math","ceil","total","users","error","caught","subscribe","next","err","console","log","goToPage","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","template","DashboardComponent_Template","rf","ctx","ɵɵelement"],"sources":["/Users/sonalimehta/Documents/GitHub/sonalimehta30.github.io/src/app/components/dashboard/dashboard.component.ts","/Users/sonalimehta/Documents/GitHub/sonalimehta30.github.io/src/app/components/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n@Component({\n  selector: 'app-dashboard',\n  // template: `\n  // <div class=\"col-md-5\">\n  //   <table class=\"table table-responsive table-striped table-compact\">\n  //     <thead> \n  //       <th> ID </th>\n  //       <th> First Name</th>\n  //       <th> Last Name</th>\n  //     </thead>\n  //     <tbody *ngIf=\"isLoading\">\n  //       <tr>\n  //         <td> </td> \n  //         <td class=\"text-center\"> ... Loading data </td>\n  //         <td> </td> \n  //       </tr>\n  //       <tr *ngFor=\"let x of [1,2,3]\">\n  //         <td> ... </td>\n  //         <td> ... </td>\n  //         <td> ... </td>\n  //       </tr>\n  //     </tbody>\n  //     <tbody *ngIf=\"!isLoading\">\n  //       <tr *ngFor=\"let x of results$ | async\">\n  //         <td> {{x.id || 'N/A'}}</td>\n  //         <td> {{x.firstName || 'N/A'}} </td>\n  //         <td> {{x.lastName || 'N/A'}}</td>\n  //       </tr>\n  //     </tbody>\n  //   </table>\n  //   <section class=\"pagination\"> \n  //     <button class=\"btn btn-sm btn-default\" [disabled]=\"!results.length || isLoading || currentPage==0\" (click)=\"goToPage('first')\"> First</button>\n  //     <button class=\"btn btn-sm btn-primary\" [disabled]=\"!results.length || isLoading || currentPage==0\" (click)=\"goToPage('previous')\"> Previous</button>\n  //     <button class=\"btn btn-sm btn-default\" [disabled]=\"!results.length || isLoading || currentPage==totalPages-1\" (click)=\"goToPage('next')\"> Next</button>\n  //     <button class=\"btn btn-sm btn-primary\" [disabled]=\"!results.length || isLoading || currentPage==totalPages-1\" (click)=\"goToPage('last')\"> Last</button>\n  //   </section>\n  // </div>\n  // `,\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n\nexport class DashboardComponent implements OnInit {\n  url: string = \"https://dummyjson.com/users\";\n  currentPage: number = 0;\n  totalPages: number = 0;\n  recordsPerPage: number = 10;\n  results: any = [];\n  results$: Observable<any>;\n  isLoading: boolean = false;\n  \n  constructor(private ht:HttpClient) { }\n  \n  ngOnInit(): void {\n    // this.fetchTableData(0)\n  }\n  fetchTableData(page:number):void{\n    this.isLoading = true;\n    let skip = page?page*this.recordsPerPage: page;\n    this.results$ = this.ht.get(`${this.url}?skip=${skip}&limit=${this.recordsPerPage}`).pipe(\n      map((res:any) =>{\n        this.isLoading = false;\n        this.totalPages = Math.ceil(res.total/this.recordsPerPage);\n        return res.users\n      }\n      ),\n      catchError((error, caught) =>caught)\n    )\n    this.results$.subscribe({\n      next: (res) => this.results = res,\n      error: err => console.log(err)\n    })\n  }\n  \n  goToPage(page:string):void{\n    switch(page){\n      case 'previous': this.currentPage = this.currentPage - 1;\n      break;\n      case 'next': this.currentPage = this.currentPage + 1;\n      break;\n      case 'last': this.currentPage = this.totalPages - 1;\n      break;\n      case 'first':\n      default: \n        this.currentPage = 0\n      break;\n    }\n    this.fetchTableData(this.currentPage)\n  }\n}\n","<app-banner></app-banner>\n<br>\n<app-images-area></app-images-area>"],"mappings":"AAGA,SAASA,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AA2ChD,OAAM,MAAOC,kBAAkB;EAS7BC,YAAoBC,EAAa;IAAb,KAAAA,EAAE,GAAFA,EAAE;IARtB,KAAAC,GAAG,GAAW,6BAA6B;IAC3C,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,OAAO,GAAQ,EAAE;IAEjB,KAAAC,SAAS,GAAY,KAAK;EAEW;EAErCC,QAAQA,CAAA;IACN;EAAA;EAEFC,cAAcA,CAACC,IAAW;IACxB,IAAI,CAACH,SAAS,GAAG,IAAI;IACrB,IAAII,IAAI,GAAGD,IAAI,GAACA,IAAI,GAAC,IAAI,CAACL,cAAc,GAAEK,IAAI;IAC9C,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACX,EAAE,CAACY,GAAG,CAAC,GAAG,IAAI,CAACX,GAAG,SAASS,IAAI,UAAU,IAAI,CAACN,cAAc,EAAE,CAAC,CAACS,IAAI,CACvFjB,GAAG,CAAEkB,GAAO,IAAI;MACd,IAAI,CAACR,SAAS,GAAG,KAAK;MACtB,IAAI,CAACH,UAAU,GAAGY,IAAI,CAACC,IAAI,CAACF,GAAG,CAACG,KAAK,GAAC,IAAI,CAACb,cAAc,CAAC;MAC1D,OAAOU,GAAG,CAACI,KAAK;IAClB,CAAC,CACA,EACDrB,UAAU,CAAC,CAACsB,KAAK,EAAEC,MAAM,KAAIA,MAAM,CAAC,CACrC;IACD,IAAI,CAACT,QAAQ,CAACU,SAAS,CAAC;MACtBC,IAAI,EAAGR,GAAG,IAAK,IAAI,CAACT,OAAO,GAAGS,GAAG;MACjCK,KAAK,EAAEI,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG;KAC9B,CAAC;EACJ;EAEAG,QAAQA,CAACjB,IAAW;IAClB,QAAOA,IAAI;MACT,KAAK,UAAU;QAAE,IAAI,CAACP,WAAW,GAAG,IAAI,CAACA,WAAW,GAAG,CAAC;QACxD;MACA,KAAK,MAAM;QAAE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACA,WAAW,GAAG,CAAC;QACpD;MACA,KAAK,MAAM;QAAE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;QACnD;MACA,KAAK,OAAO;MACZ;QACE,IAAI,CAACD,WAAW,GAAG,CAAC;QACtB;IACF;IACA,IAAI,CAACM,cAAc,CAAC,IAAI,CAACN,WAAW,CAAC;EACvC;;;uCA9CWJ,kBAAkB,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAlBhC,kBAAkB;MAAAiC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC5C/BT,EAFA,CAAAW,SAAA,iBAAyB,SACrB,sBAC+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}