{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class UserProfileComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  getName() {\n    return this.loginForm.value;\n  }\n  // loginForm = new FormGroup({ \n  //     username: new FormControl('',[Validators.required, Validators.minLength(6)]),\n  //     password: new FormControl('', [Validators.required, Validators.minLength(8)])\n  // })\n  formSubmit() {}\n}\nUserProfileComponent.ɵfac = function UserProfileComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nUserProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserProfileComponent,\n  selectors: [[\"app-user-profile\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[1, \"col-md-4\", \"form-inline\", 3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"form-control\", 3, \"click\", \"disabled\"]],\n  template: function UserProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \" Username: \");\n      i0.ɵɵelement(2, \"input\", 1);\n      i0.ɵɵtext(3, \" Password: \");\n      i0.ɵɵelement(4, \"input\", 2)(5, \"br\");\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function UserProfileComponent_Template_button_click_6_listener() {\n        return ctx.formSubmit();\n      });\n      i0.ɵɵtext(7, \" Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"names":["Validators","UserProfileComponent","constructor","formBuilder","loginForm","group","username","required","minLength","password","getName","value","formSubmit","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","UserProfileComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵlistener","UserProfileComponent_Template_button_click_6_listener","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","valid"],"sources":["/Users/sonalimehta/Documents/GitHub/sonalimehta30.github.io/src/app/components/user-profile/user-profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-profile',\n  template: `\n    <div [formGroup]=\"loginForm\" class=\"col-md-4 form-inline\"> \n      Username: <input type=\"text\" class=\"form-control\" formControlName=\"username\">\n      Password: <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n      <br>\n      <button type=\"submit\" class=\"btn btn-success form-control\" (click)=\"formSubmit()\" [disabled]=\"!loginForm.valid\"> Submit</button>\n    </div>\n  `,\n  // templateUrl: './user-profile.component.html',\n  // styleUrls: ['./user-profile.component.css']\n  styleUrls: []\n})\nexport class UserProfileComponent{\n\n  loginForm:FormGroup;\n  \n  constructor(private formBuilder:FormBuilder) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    })\n  }\n  \n  \n  getName(){\n    return this.loginForm.value\n  }\n  \n  // loginForm = new FormGroup({ \n  //     username: new FormControl('',[Validators.required, Validators.minLength(6)]),\n  //     password: new FormControl('', [Validators.required, Validators.minLength(8)])\n  // })\n  \n  formSubmit(){\n    \n  }\n\n}\n"],"mappings":"AACA,SAAiCA,UAAU,QAAqB,gBAAgB;;;AAgBhF,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAC7B,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACN,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAGAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACN,SAAS,CAACO,KAAK;EAC7B;EAEA;EACA;EACA;EACA;EAEAC,UAAUA,CAAA,GAEV;;;mCAvBWX,oBAAoB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAApBf,oBAAoB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAX7BV,EAAA,CAAAY,cAAA,aAA0D;MACxDZ,EAAA,CAAAa,MAAA,kBAAU;MAAAb,EAAA,CAAAc,SAAA,eAAmE;MAC7Ed,EAAA,CAAAa,MAAA,kBAAU;MACVb,EADU,CAAAc,SAAA,eAAuE,SAC7E;MACJd,EAAA,CAAAY,cAAA,gBAAgH;MAArDZ,EAAA,CAAAe,UAAA,mBAAAC,sDAAA;QAAA,OAASL,GAAA,CAAAZ,UAAA,EAAY;MAAA,EAAC;MAAgCC,EAAA,CAAAa,MAAA,cAAM;MACzHb,EADyH,CAAAiB,YAAA,EAAS,EAC5H;;;MALDjB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAApB,SAAA,CAAuB;MAIwDS,EAAA,CAAAmB,SAAA,GAA6B;MAA7BnB,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAApB,SAAA,CAAA6B,KAAA,CAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}