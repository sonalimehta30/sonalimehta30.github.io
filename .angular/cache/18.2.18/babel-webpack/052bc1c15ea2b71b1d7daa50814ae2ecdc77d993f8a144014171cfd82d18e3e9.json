{"ast":null,"code":"import { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../banner/banner.component\";\nimport * as i3 from \"../images-area/images-area.component\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(ht) {\n      this.ht = ht;\n      this.url = \"https://dummyjson.com/users\";\n      this.currentPage = 0;\n      this.totalPages = 0;\n      this.recordsPerPage = 10;\n      this.results = [];\n      this.isLoading = false;\n    }\n    ngOnInit() {\n      // this.fetchTableData(0)\n    }\n    fetchTableData(page) {\n      this.isLoading = true;\n      let skip = page ? page * this.recordsPerPage : page;\n      this.results$ = this.ht.get(`${this.url}?skip=${skip}&limit=${this.recordsPerPage}`).pipe(map(res => {\n        this.isLoading = false;\n        this.totalPages = Math.ceil(res.total / this.recordsPerPage);\n        return res.users;\n      }), catchError((error, caught) => caught));\n      this.results$.subscribe({\n        next: res => this.results = res,\n        error: err => console.log(err)\n      });\n    }\n    goToPage(page) {\n      switch (page) {\n        case 'previous':\n          this.currentPage = this.currentPage - 1;\n          break;\n        case 'next':\n          this.currentPage = this.currentPage + 1;\n          break;\n        case 'last':\n          this.currentPage = this.totalPages - 1;\n          break;\n        case 'first':\n        default:\n          this.currentPage = 0;\n          break;\n      }\n      this.fetchTableData(this.currentPage);\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 3,\n        vars: 0,\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"app-banner\")(1, \"br\")(2, \"app-images-area\");\n          }\n        },\n        dependencies: [i2.BannerComponent, i3.ImagesAreaComponent]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}